apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: demo-app
  labels:
    app: demo-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: demo-app
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 8080
          name: metrics
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html
        - name: exporter
          mountPath: /usr/local/bin/nginx-prometheus-exporter
          subPath: nginx-prometheus-exporter
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/stub_status.conf
          
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:0.11.0
        ports:
        - containerPort: 9113
          name: metrics
        args: 
        - -nginx.scrape-uri=http://localhost:80/stub_status
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: demo-app-html
      - name: exporter
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: demo-app
data:
  stub_status.conf: |
    server {
        listen 8080;
        server_name localhost;

        location /stub_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow ::1;
            deny all;
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app-html
  namespace: demo-app
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Demo App - Monitoring</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 50px auto;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }
            .container {
                background: rgba(255,255,255,0.1);
                padding: 30px;
                border-radius: 10px;
                backdrop-filter: blur(10px);
            }
            h1 { margin-top: 0; }
            .metrics { 
                background: rgba(0,0,0,0.2);
                padding: 15px;
                border-radius: 5px;
                margin: 20px 0;
            }
            .endpoint {
                margin: 10px 0;
                padding: 10px;
                background: rgba(255,255,255,0.1);
                border-radius: 5px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ðŸš€ Demo Application</h1>
            <p>Questa Ã¨ un'applicazione demo per testing di Prometheus e Grafana.</p>
            
            <div class="metrics">
                <h2>ðŸ“Š Endpoints Disponibili:</h2>
                <div class="endpoint">
                    <strong>GET /</strong> - Questa pagina
                </div>
                <div class="endpoint">
                    <strong>GET /health</strong> - Health check endpoint
                </div>
                <div class="endpoint">
                    <strong>GET /api/data</strong> - Endpoint API simulato
                </div>
            </div>

            <div class="metrics">
                <h2>ðŸ“ˆ Metriche Monitorate:</h2>
                <ul>
                    <li>Request rate e latenza HTTP</li>
                    <li>Utilizzo CPU e memoria</li>
                    <li>Numero di repliche attive</li>
                    <li>Error rate</li>
                    <li>Connessioni NGINX attive</li>
                </ul>
            </div>

            <p><small>Hostname: <span id="hostname"></span></small></p>
        </div>
        <script>
            document.getElementById('hostname').textContent = window.location.hostname;
        </script>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: demo-app
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      - name: redis-exporter
        image: oliver006/redis_exporter:alpine
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "localhost:6379"
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: demo-app
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  - port: 9121
    targetPort: 9121
    name: metrics
  selector:
    app: redis